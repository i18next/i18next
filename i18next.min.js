!(function(t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
    ? define(e)
    : (t.i18next = e());
})(this, function() {
  'use strict';
  function t() {
    var t = void 0,
      e = void 0,
      n = new Promise(function(n, o) {
        (t = n), (e = o);
      });
    return (n.resolve = t), (n.reject = e), n;
  }
  function e(t) {
    return null == t ? '' : '' + t;
  }
  function n(t, e, n) {
    t.forEach(function(t) {
      e[t] && (n[t] = e[t]);
    });
  }
  function o(t, e, n) {
    function o(t) {
      return t && t.indexOf('###') > -1 ? t.replace(/###/g, '.') : t;
    }
    function r() {
      return !t || 'string' == typeof t;
    }
    for (var i = 'string' != typeof e ? [].concat(e) : e.split('.'); i.length > 1; ) {
      if (r()) return {};
      var s = o(i.shift());
      !t[s] && n && (t[s] = new n()), (t = t[s]);
    }
    return r() ? {} : { obj: t, k: o(i.shift()) };
  }
  function r(t, e, n) {
    var r = o(t, e, Object);
    r.obj[r.k] = n;
  }
  function i(t, e, n, r) {
    var i = o(t, e, Object),
      s = i.obj,
      a = i.k;
    (s[a] = s[a] || []), r && (s[a] = s[a].concat(n)), r || s[a].push(n);
  }
  function s(t, e) {
    var n = o(t, e),
      r = n.obj,
      i = n.k;
    if (r) return r[i];
  }
  function a(t, e, n) {
    for (var o in e)
      o in t
        ? 'string' == typeof t[o] ||
          t[o] instanceof String ||
          'string' == typeof e[o] ||
          e[o] instanceof String
          ? n && (t[o] = e[o])
          : a(t[o], e[o], n)
        : (t[o] = e[o]);
    return t;
  }
  function u(t) {
    return t.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
  }
  function l(t) {
    return 'string' == typeof t
      ? t.replace(/[&<>"'\/]/g, function(t) {
          return j[t];
        })
      : t;
  }
  function p(t) {
    return t.charAt(0).toUpperCase() + t.slice(1);
  }
  function c() {
    var t = {};
    return (
      F.forEach(function(e) {
        e.lngs.forEach(function(n) {
          t[n] = { numbers: e.nr, plurals: A[e.fc] };
        });
      }),
      t
    );
  }
  function f(t, e) {
    for (var n = t.indexOf(e); -1 !== n; ) t.splice(n, 1), (n = t.indexOf(e));
  }
  function g() {
    return {
      debug: !1,
      initImmediate: !0,
      ns: ['translation'],
      defaultNS: ['translation'],
      fallbackLng: ['dev'],
      fallbackNS: !1,
      whitelist: !1,
      nonExplicitWhitelist: !1,
      load: 'all',
      preload: !1,
      simplifyPluralSuffix: !0,
      keySeparator: '.',
      nsSeparator: ':',
      pluralSeparator: '_',
      contextSeparator: '_',
      partialBundledLanguages: !1,
      saveMissing: !1,
      updateMissing: !1,
      saveMissingTo: 'fallback',
      saveMissingPlurals: !0,
      missingKeyHandler: !1,
      missingInterpolationHandler: !1,
      postProcess: !1,
      returnNull: !0,
      returnEmptyString: !0,
      returnObjects: !1,
      joinArrays: !1,
      returnedObjectHandler: function() {},
      parseMissingKeyHandler: !1,
      appendNamespaceToMissingKey: !1,
      appendNamespaceToCIMode: !1,
      overloadTranslationOptionHandler: function(t) {
        var e = {};
        if (
          ('object' === v(t[1]) && (e = t[1]),
          'string' == typeof t[1] && (e.defaultValue = t[1]),
          'string' == typeof t[2] && (e.tDescription = t[2]),
          'object' === v(t[2]) || 'object' === v(t[3]))
        ) {
          var n = t[3] || t[2];
          Object.keys(n).forEach(function(t) {
            e[t] = n[t];
          });
        }
        return e;
      },
      interpolation: {
        escapeValue: !0,
        format: function(t, e, n) {
          return t;
        },
        prefix: '{{',
        suffix: '}}',
        formatSeparator: ',',
        unescapePrefix: '-',
        nestingPrefix: '$t(',
        nestingSuffix: ')',
        maxReplaces: 1e3,
      },
    };
  }
  function h(t) {
    return (
      'string' == typeof t.ns && (t.ns = [t.ns]),
      'string' == typeof t.fallbackLng && (t.fallbackLng = [t.fallbackLng]),
      'string' == typeof t.fallbackNS && (t.fallbackNS = [t.fallbackNS]),
      t.whitelist &&
        t.whitelist.indexOf('cimode') < 0 &&
        (t.whitelist = t.whitelist.concat(['cimode'])),
      t
    );
  }
  function d() {}
  var v =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function(t) {
            return typeof t;
          }
        : function(t) {
            return t &&
              'function' == typeof Symbol &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? 'symbol'
              : typeof t;
          },
    y = function(t, e) {
      if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function');
    },
    m =
      Object.assign ||
      function(t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);
        }
        return t;
      },
    b = function(t, e) {
      if ('function' != typeof e && null !== e)
        throw new TypeError('Super expression must either be null or a function, not ' + typeof e);
      (t.prototype = Object.create(e && e.prototype, {
        constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 },
      })),
        e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : (t.__proto__ = e));
    },
    x = function(t, e) {
      if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !e || ('object' != typeof e && 'function' != typeof e) ? t : e;
    },
    S = (function() {
      function t(t, e) {
        var n = [],
          o = !0,
          r = !1,
          i = void 0;
        try {
          for (
            var s, a = t[Symbol.iterator]();
            !(o = (s = a.next()).done) && (n.push(s.value), !e || n.length !== e);
            o = !0
          );
        } catch (t) {
          (r = !0), (i = t);
        } finally {
          try {
            !o && a.return && a.return();
          } finally {
            if (r) throw i;
          }
        }
        return n;
      }
      return function(e, n) {
        if (Array.isArray(e)) return e;
        if (Symbol.iterator in Object(e)) return t(e, n);
        throw new TypeError('Invalid attempt to destructure non-iterable instance');
      };
    })(),
    k = function(t) {
      if (Array.isArray(t)) {
        for (var e = 0, n = Array(t.length); e < t.length; e++) n[e] = t[e];
        return n;
      }
      return Array.from(t);
    },
    w = {
      type: 'logger',
      log: function(t) {
        this.output('log', t);
      },
      warn: function(t) {
        this.output('warn', t);
      },
      error: function(t) {
        this.output('error', t);
      },
      output: function(t, e) {
        var n;
        console && console[t] && (n = console)[t].apply(n, k(e));
      },
    },
    O = (function() {
      function t(e) {
        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        y(this, t), this.init(e, n);
      }
      return (
        (t.prototype.init = function(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          (this.prefix = e.prefix || 'i18next:'),
            (this.logger = t || w),
            (this.options = e),
            (this.debug = e.debug);
        }),
        (t.prototype.setDebug = function(t) {
          this.debug = t;
        }),
        (t.prototype.log = function() {
          for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return this.forward(e, 'log', '', !0);
        }),
        (t.prototype.warn = function() {
          for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return this.forward(e, 'warn', '', !0);
        }),
        (t.prototype.error = function() {
          for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return this.forward(e, 'error', '');
        }),
        (t.prototype.deprecate = function() {
          for (var t = arguments.length, e = Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return this.forward(e, 'warn', 'WARNING DEPRECATED: ', !0);
        }),
        (t.prototype.forward = function(t, e, n, o) {
          return o && !this.debug
            ? null
            : ('string' == typeof t[0] && (t[0] = '' + n + this.prefix + ' ' + t[0]),
              this.logger[e](t));
        }),
        (t.prototype.create = function(e) {
          return new t(this.logger, m({ prefix: this.prefix + ':' + e + ':' }, this.options));
        }),
        t
      );
    })(),
    R = new O(),
    L = (function() {
      function t() {
        y(this, t), (this.observers = {});
      }
      return (
        (t.prototype.on = function(t, e) {
          var n = this;
          return (
            t.split(' ').forEach(function(t) {
              (n.observers[t] = n.observers[t] || []), n.observers[t].push(e);
            }),
            this
          );
        }),
        (t.prototype.off = function(t, e) {
          var n = this;
          this.observers[t] &&
            this.observers[t].forEach(function() {
              if (e) {
                var o = n.observers[t].indexOf(e);
                o > -1 && n.observers[t].splice(o, 1);
              } else delete n.observers[t];
            });
        }),
        (t.prototype.emit = function(t) {
          for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), o = 1; o < e; o++)
            n[o - 1] = arguments[o];
          if (this.observers[t]) {
            [].concat(this.observers[t]).forEach(function(t) {
              t.apply(void 0, n);
            });
          }
          if (this.observers['*']) {
            [].concat(this.observers['*']).forEach(function(e) {
              e.apply(e, [t].concat(n));
            });
          }
        }),
        t
      );
    })(),
    j = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;', '/': '&#x2F;' },
    N = (function(t) {
      function e(n) {
        var o =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : { ns: ['translation'], defaultNS: 'translation' };
        y(this, e);
        var r = x(this, t.call(this));
        return (
          (r.data = n || {}),
          (r.options = o),
          void 0 === r.options.keySeparator && (r.options.keySeparator = '.'),
          r
        );
      }
      return (
        b(e, t),
        (e.prototype.addNamespaces = function(t) {
          this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
        }),
        (e.prototype.removeNamespaces = function(t) {
          var e = this.options.ns.indexOf(t);
          e > -1 && this.options.ns.splice(e, 1);
        }),
        (e.prototype.getResource = function(t, e, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
            r = void 0 !== o.keySeparator ? o.keySeparator : this.options.keySeparator,
            i = [t, e];
          return (
            n && 'string' != typeof n && (i = i.concat(n)),
            n && 'string' == typeof n && (i = i.concat(r ? n.split(r) : n)),
            t.indexOf('.') > -1 && (i = t.split('.')),
            s(this.data, i)
          );
        }),
        (e.prototype.addResource = function(t, e, n, o) {
          var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { silent: !1 },
            s = this.options.keySeparator;
          void 0 === s && (s = '.');
          var a = [t, e];
          n && (a = a.concat(s ? n.split(s) : n)),
            t.indexOf('.') > -1 && ((a = t.split('.')), (o = e), (e = a[1])),
            this.addNamespaces(e),
            r(this.data, a, o),
            i.silent || this.emit('added', t, e, n, o);
        }),
        (e.prototype.addResources = function(t, e, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { silent: !1 };
          for (var r in n)
            'string' == typeof n[r] && this.addResource(t, e, r, n[r], { silent: !0 });
          o.silent || this.emit('added', t, e, n);
        }),
        (e.prototype.addResourceBundle = function(t, e, n, o, i) {
          var u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : { silent: !1 },
            l = [t, e];
          t.indexOf('.') > -1 && ((l = t.split('.')), (o = n), (n = e), (e = l[1])),
            this.addNamespaces(e);
          var p = s(this.data, l) || {};
          o ? a(p, n, i) : (p = m({}, p, n)),
            r(this.data, l, p),
            u.silent || this.emit('added', t, e, n);
        }),
        (e.prototype.removeResourceBundle = function(t, e) {
          this.hasResourceBundle(t, e) && delete this.data[t][e],
            this.removeNamespaces(e),
            this.emit('removed', t, e);
        }),
        (e.prototype.hasResourceBundle = function(t, e) {
          return void 0 !== this.getResource(t, e);
        }),
        (e.prototype.getResourceBundle = function(t, e) {
          return (
            e || (e = this.options.defaultNS),
            'v1' === this.options.compatibilityAPI
              ? m({}, this.getResource(t, e))
              : this.getResource(t, e)
          );
        }),
        (e.prototype.getDataByLanguage = function(t) {
          return this.data[t];
        }),
        (e.prototype.toJSON = function() {
          return this.data;
        }),
        e
      );
    })(L),
    C = {
      processors: {},
      addPostProcessor: function(t) {
        this.processors[t.name] = t;
      },
      handle: function(t, e, n, o, r) {
        var i = this;
        return (
          t.forEach(function(t) {
            i.processors[t] && (e = i.processors[t].process(e, n, o, r));
          }),
          e
        );
      },
    },
    E = (function(t) {
      function e(o) {
        var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        y(this, e);
        var i = x(this, t.call(this));
        return (
          n(
            [
              'resourceStore',
              'languageUtils',
              'pluralResolver',
              'interpolator',
              'backendConnector',
              'i18nFormat',
            ],
            o,
            i,
          ),
          (i.options = r),
          void 0 === i.options.keySeparator && (i.options.keySeparator = '.'),
          (i.logger = R.create('translator')),
          i
        );
      }
      return (
        b(e, t),
        (e.prototype.changeLanguage = function(t) {
          t && (this.language = t);
        }),
        (e.prototype.exists = function(t) {
          var e =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : { interpolation: {} },
            n = this.resolve(t, e);
          return n && void 0 !== n.res;
        }),
        (e.prototype.extractFromKey = function(t, e) {
          var n = e.nsSeparator || this.options.nsSeparator;
          void 0 === n && (n = ':');
          var o = void 0 !== e.keySeparator ? e.keySeparator : this.options.keySeparator,
            r = e.ns || this.options.defaultNS;
          if (n && t.indexOf(n) > -1) {
            var i = t.split(n);
            (n !== o || (n === o && this.options.ns.indexOf(i[0]) > -1)) && (r = i.shift()),
              (t = i.join(o));
          }
          return 'string' == typeof r && (r = [r]), { key: t, namespaces: r };
        }),
        (e.prototype.translate = function(t, e) {
          var n = this;
          if (
            ('object' !== (void 0 === e ? 'undefined' : v(e)) &&
              this.options.overloadTranslationOptionHandler &&
              (e = this.options.overloadTranslationOptionHandler(arguments)),
            e || (e = {}),
            void 0 === t || null === t)
          )
            return '';
          Array.isArray(t) || (t = [String(t)]);
          var o = void 0 !== e.keySeparator ? e.keySeparator : this.options.keySeparator,
            r = this.extractFromKey(t[t.length - 1], e),
            i = r.key,
            s = r.namespaces,
            a = s[s.length - 1],
            u = e.lng || this.language,
            l = e.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
          if (u && 'cimode' === u.toLowerCase()) {
            if (l) {
              var p = e.nsSeparator || this.options.nsSeparator;
              return a + p + i;
            }
            return i;
          }
          var c = this.resolve(t, e),
            f = c && c.res,
            g = (c && c.usedKey) || i,
            h = Object.prototype.toString.apply(f),
            d = ['[object Number]', '[object Function]', '[object RegExp]'],
            y = void 0 !== e.joinArrays ? e.joinArrays : this.options.joinArrays,
            b = !this.i18nFormat || this.i18nFormat.handleAsObject,
            x = 'string' != typeof f && 'boolean' != typeof f && 'number' != typeof f;
          if (b && f && x && d.indexOf(h) < 0 && (!y || '[object Array]' !== h)) {
            if (!e.returnObjects && !this.options.returnObjects)
              return (
                this.logger.warn('accessing an object - but returnObjects options is not enabled!'),
                this.options.returnedObjectHandler
                  ? this.options.returnedObjectHandler(g, f, e)
                  : "key '" + i + ' (' + this.language + ")' returned an object instead of string."
              );
            if (o) {
              var S = '[object Array]' === h ? [] : {};
              for (var k in f)
                if (Object.prototype.hasOwnProperty.call(f, k)) {
                  var w = '' + g + o + k;
                  (S[k] = this.translate(w, m({}, e, { joinArrays: !1, ns: s }))),
                    S[k] === w && (S[k] = f[k]);
                }
              f = S;
            }
          } else if (b && y && '[object Array]' === h)
            (f = f.join(y)) && (f = this.extendTranslation(f, t, e));
          else {
            var O = !1,
              R = !1;
            if (!this.isValidLookup(f) && void 0 !== e.defaultValue) {
              if (((O = !0), void 0 !== e.count)) {
                var L = this.pluralResolver.getSuffix(u, e.count);
                f = e['defaultValue' + L];
              }
              f || (f = e.defaultValue);
            }
            this.isValidLookup(f) || ((R = !0), (f = i));
            var j = e.defaultValue && e.defaultValue !== f && this.options.updateMissing;
            if (R || O || j) {
              this.logger.log(j ? 'updateKey' : 'missingKey', u, a, i, j ? e.defaultValue : f);
              var N = [],
                C = this.languageUtils.getFallbackCodes(
                  this.options.fallbackLng,
                  e.lng || this.language,
                );
              if ('fallback' === this.options.saveMissingTo && C && C[0])
                for (var E = 0; E < C.length; E++) N.push(C[E]);
              else
                'all' === this.options.saveMissingTo
                  ? (N = this.languageUtils.toResolveHierarchy(e.lng || this.language))
                  : N.push(e.lng || this.language);
              var P = function(t, o) {
                n.options.missingKeyHandler
                  ? n.options.missingKeyHandler(t, a, o, j ? e.defaultValue : f, j, e)
                  : n.backendConnector &&
                    n.backendConnector.saveMissing &&
                    n.backendConnector.saveMissing(t, a, o, j ? e.defaultValue : f, j, e),
                  n.emit('missingKey', t, a, o, f);
              };
              if (this.options.saveMissing) {
                var F = void 0 !== e.count && 'string' != typeof e.count;
                this.options.saveMissingPlurals && F
                  ? N.forEach(function(t) {
                      n.pluralResolver.getPluralFormsOfKey(t, i).forEach(function(e) {
                        return P([t], e);
                      });
                    })
                  : P(N, i);
              }
            }
            (f = this.extendTranslation(f, t, e, c)),
              R && f === i && this.options.appendNamespaceToMissingKey && (f = a + ':' + i),
              R &&
                this.options.parseMissingKeyHandler &&
                (f = this.options.parseMissingKeyHandler(f));
          }
          return f;
        }),
        (e.prototype.extendTranslation = function(t, e, n, o) {
          var r = this;
          if (this.i18nFormat && this.i18nFormat.parse)
            t = this.i18nFormat.parse(t, n, o.usedLng, o.usedNS, o.usedKey, { resolved: o });
          else if (!n.skipInterpolation) {
            n.interpolation &&
              this.interpolator.init(
                m({}, n, { interpolation: m({}, this.options.interpolation, n.interpolation) }),
              );
            var i = n.replace && 'string' != typeof n.replace ? n.replace : n;
            this.options.interpolation.defaultVariables &&
              (i = m({}, this.options.interpolation.defaultVariables, i)),
              (t = this.interpolator.interpolate(t, i, n.lng || this.language, n)),
              !1 !== n.nest &&
                (t = this.interpolator.nest(
                  t,
                  function() {
                    return r.translate.apply(r, arguments);
                  },
                  n,
                )),
              n.interpolation && this.interpolator.reset();
          }
          var s = n.postProcess || this.options.postProcess,
            a = 'string' == typeof s ? [s] : s;
          return (
            void 0 !== t &&
              null !== t &&
              a &&
              a.length &&
              !1 !== n.applyPostProcessor &&
              (t = C.handle(a, t, e, n, this)),
            t
          );
        }),
        (e.prototype.resolve = function(t) {
          var e = this,
            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            o = void 0,
            r = void 0,
            i = void 0,
            s = void 0;
          return (
            'string' == typeof t && (t = [t]),
            t.forEach(function(t) {
              if (!e.isValidLookup(o)) {
                var a = e.extractFromKey(t, n),
                  u = a.key;
                r = u;
                var l = a.namespaces;
                e.options.fallbackNS && (l = l.concat(e.options.fallbackNS));
                var p = void 0 !== n.count && 'string' != typeof n.count,
                  c = void 0 !== n.context && 'string' == typeof n.context && '' !== n.context,
                  f = n.lngs
                    ? n.lngs
                    : e.languageUtils.toResolveHierarchy(n.lng || e.language, n.fallbackLng);
                l.forEach(function(t) {
                  e.isValidLookup(o) ||
                    ((s = t),
                    f.forEach(function(r) {
                      if (!e.isValidLookup(o)) {
                        i = r;
                        var s = u,
                          a = [s];
                        if (e.i18nFormat && e.i18nFormat.addLookupKeys)
                          e.i18nFormat.addLookupKeys(a, u, r, t, n);
                        else {
                          var l = void 0;
                          p && (l = e.pluralResolver.getSuffix(r, n.count)),
                            p && c && a.push(s + l),
                            c && a.push((s += '' + e.options.contextSeparator + n.context)),
                            p && a.push((s += l));
                        }
                        for (var f = void 0; (f = a.pop()); )
                          e.isValidLookup(o) || (o = e.getResource(r, t, f, n));
                      }
                    }));
                });
              }
            }),
            { res: o, usedKey: r, usedLng: i, usedNS: s }
          );
        }),
        (e.prototype.isValidLookup = function(t) {
          return !(
            void 0 === t ||
            (!this.options.returnNull && null === t) ||
            (!this.options.returnEmptyString && '' === t)
          );
        }),
        (e.prototype.getResource = function(t, e, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          return this.i18nFormat && this.i18nFormat.getResource
            ? this.i18nFormat.getResource(t, e, n, o)
            : this.resourceStore.getResource(t, e, n, o);
        }),
        e
      );
    })(L),
    P = (function() {
      function t(e) {
        y(this, t),
          (this.options = e),
          (this.whitelist = this.options.whitelist || !1),
          (this.logger = R.create('languageUtils'));
      }
      return (
        (t.prototype.getScriptPartFromCode = function(t) {
          if (!t || t.indexOf('-') < 0) return null;
          var e = t.split('-');
          return 2 === e.length ? null : (e.pop(), this.formatLanguageCode(e.join('-')));
        }),
        (t.prototype.getLanguagePartFromCode = function(t) {
          if (!t || t.indexOf('-') < 0) return t;
          var e = t.split('-');
          return this.formatLanguageCode(e[0]);
        }),
        (t.prototype.formatLanguageCode = function(t) {
          if ('string' == typeof t && t.indexOf('-') > -1) {
            var e = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'],
              n = t.split('-');
            return (
              this.options.lowerCaseLng
                ? (n = n.map(function(t) {
                    return t.toLowerCase();
                  }))
                : 2 === n.length
                ? ((n[0] = n[0].toLowerCase()),
                  (n[1] = n[1].toUpperCase()),
                  e.indexOf(n[1].toLowerCase()) > -1 && (n[1] = p(n[1].toLowerCase())))
                : 3 === n.length &&
                  ((n[0] = n[0].toLowerCase()),
                  2 === n[1].length && (n[1] = n[1].toUpperCase()),
                  'sgn' !== n[0] && 2 === n[2].length && (n[2] = n[2].toUpperCase()),
                  e.indexOf(n[1].toLowerCase()) > -1 && (n[1] = p(n[1].toLowerCase())),
                  e.indexOf(n[2].toLowerCase()) > -1 && (n[2] = p(n[2].toLowerCase()))),
              n.join('-')
            );
          }
          return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
        }),
        (t.prototype.isWhitelisted = function(t) {
          return (
            ('languageOnly' === this.options.load || this.options.nonExplicitWhitelist) &&
              (t = this.getLanguagePartFromCode(t)),
            !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(t) > -1
          );
        }),
        (t.prototype.getFallbackCodes = function(t, e) {
          if (!t) return [];
          if (
            ('string' == typeof t && (t = [t]),
            '[object Array]' === Object.prototype.toString.apply(t))
          )
            return t;
          if (!e) return t.default || [];
          var n = t[e];
          return (
            n || (n = t[this.getScriptPartFromCode(e)]),
            n || (n = t[this.formatLanguageCode(e)]),
            n || (n = t.default),
            n || []
          );
        }),
        (t.prototype.toResolveHierarchy = function(t, e) {
          var n = this,
            o = this.getFallbackCodes(e || this.options.fallbackLng || [], t),
            r = [],
            i = function(t) {
              t &&
                (n.isWhitelisted(t)
                  ? r.push(t)
                  : n.logger.warn('rejecting non-whitelisted language code: ' + t));
            };
          return (
            'string' == typeof t && t.indexOf('-') > -1
              ? ('languageOnly' !== this.options.load && i(this.formatLanguageCode(t)),
                'languageOnly' !== this.options.load &&
                  'currentOnly' !== this.options.load &&
                  i(this.getScriptPartFromCode(t)),
                'currentOnly' !== this.options.load && i(this.getLanguagePartFromCode(t)))
              : 'string' == typeof t && i(this.formatLanguageCode(t)),
            o.forEach(function(t) {
              r.indexOf(t) < 0 && i(n.formatLanguageCode(t));
            }),
            r
          );
        }),
        t
      );
    })(),
    F = [
      {
        lngs: [
          'ach',
          'ak',
          'am',
          'arn',
          'br',
          'fil',
          'gun',
          'ln',
          'mfe',
          'mg',
          'mi',
          'oc',
          'pt',
          'pt-BR',
          'tg',
          'ti',
          'tr',
          'uz',
          'wa',
        ],
        nr: [1, 2],
        fc: 1,
      },
      {
        lngs: [
          'af',
          'an',
          'ast',
          'az',
          'bg',
          'bn',
          'ca',
          'da',
          'de',
          'dev',
          'el',
          'en',
          'eo',
          'es',
          'et',
          'eu',
          'fi',
          'fo',
          'fur',
          'fy',
          'gl',
          'gu',
          'ha',
          'hi',
          'hu',
          'hy',
          'ia',
          'it',
          'kn',
          'ku',
          'lb',
          'mai',
          'ml',
          'mn',
          'mr',
          'nah',
          'nap',
          'nb',
          'ne',
          'nl',
          'nn',
          'no',
          'nso',
          'pa',
          'pap',
          'pms',
          'ps',
          'pt-PT',
          'rm',
          'sco',
          'se',
          'si',
          'so',
          'son',
          'sq',
          'sv',
          'sw',
          'ta',
          'te',
          'tk',
          'ur',
          'yo',
        ],
        nr: [1, 2],
        fc: 2,
      },
      {
        lngs: [
          'ay',
          'bo',
          'cgg',
          'fa',
          'id',
          'ja',
          'jbo',
          'ka',
          'kk',
          'km',
          'ko',
          'ky',
          'lo',
          'ms',
          'sah',
          'su',
          'th',
          'tt',
          'ug',
          'vi',
          'wo',
          'zh',
        ],
        nr: [1],
        fc: 3,
      },
      { lngs: ['be', 'bs', 'dz', 'hr', 'ru', 'sr', 'uk'], nr: [1, 2, 5], fc: 4 },
      { lngs: ['ar'], nr: [0, 1, 2, 3, 11, 100], fc: 5 },
      { lngs: ['cs', 'sk'], nr: [1, 2, 5], fc: 6 },
      { lngs: ['csb', 'pl'], nr: [1, 2, 5], fc: 7 },
      { lngs: ['cy'], nr: [1, 2, 3, 8], fc: 8 },
      { lngs: ['fr'], nr: [1, 2], fc: 9 },
      { lngs: ['ga'], nr: [1, 2, 3, 7, 11], fc: 10 },
      { lngs: ['gd'], nr: [1, 2, 3, 20], fc: 11 },
      { lngs: ['is'], nr: [1, 2], fc: 12 },
      { lngs: ['jv'], nr: [0, 1], fc: 13 },
      { lngs: ['kw'], nr: [1, 2, 3, 4], fc: 14 },
      { lngs: ['lt'], nr: [1, 2, 10], fc: 15 },
      { lngs: ['lv'], nr: [1, 2, 0], fc: 16 },
      { lngs: ['mk'], nr: [1, 2], fc: 17 },
      { lngs: ['mnk'], nr: [0, 1, 2], fc: 18 },
      { lngs: ['mt'], nr: [1, 2, 11, 20], fc: 19 },
      { lngs: ['or'], nr: [2, 1], fc: 2 },
      { lngs: ['ro'], nr: [1, 2, 20], fc: 20 },
      { lngs: ['sl'], nr: [5, 1, 2, 3], fc: 21 },
      { lngs: ['he'], nr: [1, 2, 20, 21], fc: 22 },
    ],
    A = {
      1: function(t) {
        return Number(t > 1);
      },
      2: function(t) {
        return Number(1 != t);
      },
      3: function(t) {
        return 0;
      },
      4: function(t) {
        return Number(
          t % 10 == 1 && t % 100 != 11
            ? 0
            : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
            ? 1
            : 2,
        );
      },
      5: function(t) {
        return Number(
          0 === t
            ? 0
            : 1 == t
            ? 1
            : 2 == t
            ? 2
            : t % 100 >= 3 && t % 100 <= 10
            ? 3
            : t % 100 >= 11
            ? 4
            : 5,
        );
      },
      6: function(t) {
        return Number(1 == t ? 0 : t >= 2 && t <= 4 ? 1 : 2);
      },
      7: function(t) {
        return Number(
          1 == t ? 0 : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? 1 : 2,
        );
      },
      8: function(t) {
        return Number(1 == t ? 0 : 2 == t ? 1 : 8 != t && 11 != t ? 2 : 3);
      },
      9: function(t) {
        return Number(t >= 2);
      },
      10: function(t) {
        return Number(1 == t ? 0 : 2 == t ? 1 : t < 7 ? 2 : t < 11 ? 3 : 4);
      },
      11: function(t) {
        return Number(1 == t || 11 == t ? 0 : 2 == t || 12 == t ? 1 : t > 2 && t < 20 ? 2 : 3);
      },
      12: function(t) {
        return Number(t % 10 != 1 || t % 100 == 11);
      },
      13: function(t) {
        return Number(0 !== t);
      },
      14: function(t) {
        return Number(1 == t ? 0 : 2 == t ? 1 : 3 == t ? 2 : 3);
      },
      15: function(t) {
        return Number(
          t % 10 == 1 && t % 100 != 11 ? 0 : t % 10 >= 2 && (t % 100 < 10 || t % 100 >= 20) ? 1 : 2,
        );
      },
      16: function(t) {
        return Number(t % 10 == 1 && t % 100 != 11 ? 0 : 0 !== t ? 1 : 2);
      },
      17: function(t) {
        return Number(1 == t || t % 10 == 1 ? 0 : 1);
      },
      18: function(t) {
        return Number(0 == t ? 0 : 1 == t ? 1 : 2);
      },
      19: function(t) {
        return Number(
          1 == t
            ? 0
            : 0 === t || (t % 100 > 1 && t % 100 < 11)
            ? 1
            : t % 100 > 10 && t % 100 < 20
            ? 2
            : 3,
        );
      },
      20: function(t) {
        return Number(1 == t ? 0 : 0 === t || (t % 100 > 0 && t % 100 < 20) ? 1 : 2);
      },
      21: function(t) {
        return Number(t % 100 == 1 ? 1 : t % 100 == 2 ? 2 : t % 100 == 3 || t % 100 == 4 ? 3 : 0);
      },
      22: function(t) {
        return Number(1 === t ? 0 : 2 === t ? 1 : (t < 0 || t > 10) && t % 10 == 0 ? 2 : 3);
      },
    },
    T = (function() {
      function t(e) {
        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        y(this, t),
          (this.languageUtils = e),
          (this.options = n),
          (this.logger = R.create('pluralResolver')),
          (this.rules = c());
      }
      return (
        (t.prototype.addRule = function(t, e) {
          this.rules[t] = e;
        }),
        (t.prototype.getRule = function(t) {
          return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
        }),
        (t.prototype.needsPlural = function(t) {
          var e = this.getRule(t);
          return e && e.numbers.length > 1;
        }),
        (t.prototype.getPluralFormsOfKey = function(t, e) {
          var n = this,
            o = [],
            r = this.getRule(t);
          return r
            ? (r.numbers.forEach(function(r) {
                var i = n.getSuffix(t, r);
                o.push('' + e + i);
              }),
              o)
            : o;
        }),
        (t.prototype.getSuffix = function(t, e) {
          var n = this,
            o = this.getRule(t);
          if (o) {
            var r = o.noAbs ? o.plurals(e) : o.plurals(Math.abs(e)),
              i = o.numbers[r];
            this.options.simplifyPluralSuffix &&
              2 === o.numbers.length &&
              1 === o.numbers[0] &&
              (2 === i ? (i = 'plural') : 1 === i && (i = ''));
            var s = function() {
              return n.options.prepend && i.toString()
                ? n.options.prepend + i.toString()
                : i.toString();
            };
            return 'v1' === this.options.compatibilityJSON
              ? 1 === i
                ? ''
                : 'number' == typeof i
                ? '_plural_' + i.toString()
                : s()
              : 'v2' === this.options.compatibilityJSON
              ? s()
              : this.options.simplifyPluralSuffix && 2 === o.numbers.length && 1 === o.numbers[0]
              ? s()
              : this.options.prepend && r.toString()
              ? this.options.prepend + r.toString()
              : r.toString();
          }
          return this.logger.warn('no plural rule found for: ' + t), '';
        }),
        t
      );
    })(),
    V = (function() {
      function t() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        y(this, t), (this.logger = R.create('interpolator')), this.init(e, !0);
      }
      return (
        (t.prototype.init = function() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          arguments[1] &&
            ((this.options = t),
            (this.format =
              (t.interpolation && t.interpolation.format) ||
              function(t) {
                return t;
              })),
            t.interpolation || (t.interpolation = { escapeValue: !0 });
          var e = t.interpolation;
          (this.escape = void 0 !== e.escape ? e.escape : l),
            (this.escapeValue = void 0 === e.escapeValue || e.escapeValue),
            (this.useRawValueToEscape = void 0 !== e.useRawValueToEscape && e.useRawValueToEscape),
            (this.prefix = e.prefix ? u(e.prefix) : e.prefixEscaped || '{{'),
            (this.suffix = e.suffix ? u(e.suffix) : e.suffixEscaped || '}}'),
            (this.formatSeparator = e.formatSeparator
              ? e.formatSeparator
              : e.formatSeparator || ','),
            (this.unescapePrefix = e.unescapeSuffix ? '' : e.unescapePrefix || '-'),
            (this.unescapeSuffix = this.unescapePrefix ? '' : e.unescapeSuffix || ''),
            (this.nestingPrefix = e.nestingPrefix
              ? u(e.nestingPrefix)
              : e.nestingPrefixEscaped || u('$t(')),
            (this.nestingSuffix = e.nestingSuffix
              ? u(e.nestingSuffix)
              : e.nestingSuffixEscaped || u(')')),
            (this.maxReplaces = e.maxReplaces ? e.maxReplaces : 1e3),
            this.resetRegExp();
        }),
        (t.prototype.reset = function() {
          this.options && this.init(this.options);
        }),
        (t.prototype.resetRegExp = function() {
          var t = this.prefix + '(.+?)' + this.suffix;
          this.regexp = new RegExp(t, 'g');
          var e =
            '' + this.prefix + this.unescapePrefix + '(.+?)' + this.unescapeSuffix + this.suffix;
          this.regexpUnescape = new RegExp(e, 'g');
          var n = this.nestingPrefix + '(.+?)' + this.nestingSuffix;
          this.nestingRegexp = new RegExp(n, 'g');
        }),
        (t.prototype.interpolate = function(t, n, o, r) {
          function i(t) {
            return t.replace(/\$/g, '$$$$');
          }
          var a = this,
            u = void 0,
            l = void 0,
            p = void 0,
            c = function(t) {
              if (t.indexOf(a.formatSeparator) < 0) return s(n, t);
              var e = t.split(a.formatSeparator),
                r = e.shift().trim(),
                i = e.join(a.formatSeparator).trim();
              return a.format(s(n, r), i, o);
            };
          this.resetRegExp();
          var f = (r && r.missingInterpolationHandler) || this.options.missingInterpolationHandler;
          for (
            p = 0;
            (u = this.regexpUnescape.exec(t)) &&
            ((l = c(u[1].trim())),
            (t = t.replace(u[0], l)),
            (this.regexpUnescape.lastIndex = 0),
            !(++p >= this.maxReplaces));

          );
          for (p = 0; (u = this.regexp.exec(t)); ) {
            if (void 0 === (l = c(u[1].trim())))
              if ('function' == typeof f) {
                var g = f(t, u, r);
                l = 'string' == typeof g ? g : '';
              } else
                this.logger.warn('missed to pass in variable ' + u[1] + ' for interpolating ' + t),
                  (l = '');
            else 'string' == typeof l || this.useRawValueToEscape || (l = e(l));
            if (
              ((l = i(this.escapeValue ? this.escape(l) : l)),
              (t = t.replace(u[0], l)),
              (this.regexp.lastIndex = 0),
              ++p >= this.maxReplaces)
            )
              break;
          }
          return t;
        }),
        (t.prototype.nest = function(t, n) {
          function o(t, e) {
            if (t.indexOf(',') < 0) return t;
            var n = t.split(',');
            t = n.shift();
            var o = n.join(',');
            (o = this.interpolate(o, a)), (o = o.replace(/'/g, '"'));
            try {
              (a = JSON.parse(o)), e && (a = m({}, e, a));
            } catch (e) {
              this.logger.error('failed parsing options string in nesting for key ' + t, e);
            }
            return t;
          }
          var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            i = void 0,
            s = void 0,
            a = m({}, r);
          for (a.applyPostProcessor = !1; (i = this.nestingRegexp.exec(t)); ) {
            if ((s = n(o.call(this, i[1].trim(), a), a)) && i[0] === t && 'string' != typeof s)
              return s;
            'string' != typeof s && (s = e(s)),
              s || (this.logger.warn('missed to resolve ' + i[1] + ' for nesting ' + t), (s = '')),
              (t = t.replace(i[0], s)),
              (this.regexp.lastIndex = 0);
          }
          return t;
        }),
        t
      );
    })(),
    U = (function(t) {
      function e(n, o, r) {
        var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
        y(this, e);
        var s = x(this, t.call(this));
        return (
          (s.backend = n),
          (s.store = o),
          (s.languageUtils = r.languageUtils),
          (s.options = i),
          (s.logger = R.create('backendConnector')),
          (s.state = {}),
          (s.queue = []),
          s.backend && s.backend.init && s.backend.init(r, i.backend, i),
          s
        );
      }
      return (
        b(e, t),
        (e.prototype.queueLoad = function(t, e, n, o) {
          var r = this,
            i = [],
            s = [],
            a = [],
            u = [];
          return (
            t.forEach(function(t) {
              var o = !0;
              e.forEach(function(e) {
                var a = t + '|' + e;
                !n.reload && r.store.hasResourceBundle(t, e)
                  ? (r.state[a] = 2)
                  : r.state[a] < 0 ||
                    (1 === r.state[a]
                      ? s.indexOf(a) < 0 && s.push(a)
                      : ((r.state[a] = 1),
                        (o = !1),
                        s.indexOf(a) < 0 && s.push(a),
                        i.indexOf(a) < 0 && i.push(a),
                        u.indexOf(e) < 0 && u.push(e)));
              }),
                o || a.push(t);
            }),
            (i.length || s.length) &&
              this.queue.push({ pending: s, loaded: {}, errors: [], callback: o }),
            { toLoad: i, pending: s, toLoadLanguages: a, toLoadNamespaces: u }
          );
        }),
        (e.prototype.loaded = function(t, e, n) {
          var o = t.split('|'),
            r = S(o, 2),
            s = r[0],
            a = r[1];
          e && this.emit('failedLoading', s, a, e),
            n && this.store.addResourceBundle(s, a, n),
            (this.state[t] = e ? -1 : 2);
          var u = {};
          this.queue.forEach(function(n) {
            i(n.loaded, [s], a),
              f(n.pending, t),
              e && n.errors.push(e),
              0 !== n.pending.length ||
                n.done ||
                (Object.keys(n.loaded).forEach(function(t) {
                  u[t] || (u[t] = []),
                    n.loaded[t].length &&
                      n.loaded[t].forEach(function(e) {
                        u[t].indexOf(e) < 0 && u[t].push(e);
                      });
                }),
                (n.done = !0),
                n.errors.length ? n.callback(n.errors) : n.callback());
          }),
            this.emit('loaded', u),
            (this.queue = this.queue.filter(function(t) {
              return !t.done;
            }));
        }),
        (e.prototype.read = function(t, e, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
            r = this,
            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 250,
            s = arguments[5];
          return t.length
            ? this.backend[n](t, e, function(a, u) {
                if (a && u && o < 5)
                  return void setTimeout(function() {
                    r.read.call(r, t, e, n, o + 1, 2 * i, s);
                  }, i);
                s(a, u);
              })
            : s(null, {});
        }),
        (e.prototype.prepareLoading = function(t, e) {
          var n = this,
            o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            r = arguments[3];
          if (!this.backend)
            return (
              this.logger.warn('No backend was added via i18next.use. Will not load resources.'),
              r && r()
            );
          'string' == typeof t && (t = this.languageUtils.toResolveHierarchy(t)),
            'string' == typeof e && (e = [e]);
          var i = this.queueLoad(t, e, o, r);
          if (!i.toLoad.length) return i.pending.length || r(), null;
          i.toLoad.forEach(function(t) {
            n.loadOne(t);
          });
        }),
        (e.prototype.load = function(t, e, n) {
          this.prepareLoading(t, e, {}, n);
        }),
        (e.prototype.reload = function(t, e, n) {
          this.prepareLoading(t, e, { reload: !0 }, n);
        }),
        (e.prototype.loadOne = function(t) {
          var e = this,
            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : '',
            o = t.split('|'),
            r = S(o, 2),
            i = r[0],
            s = r[1];
          this.read(i, s, 'read', null, null, function(o, r) {
            o && e.logger.warn(n + 'loading namespace ' + s + ' for language ' + i + ' failed', o),
              !o && r && e.logger.log(n + 'loaded namespace ' + s + ' for language ' + i, r),
              e.loaded(t, o, r);
          });
        }),
        (e.prototype.saveMissing = function(t, e, n, o, r) {
          var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
          this.backend &&
            this.backend.create &&
            this.backend.create(t, e, n, o, null, m({}, i, { isUpdate: r })),
            t && t[0] && this.store.addResource(t[0], e, n, o);
        }),
        e
      );
    })(L);
  return new ((function(e) {
    function n() {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
        o = arguments[1];
      y(this, n);
      var r = x(this, e.call(this));
      if (
        ((r.options = h(t)),
        (r.services = {}),
        (r.logger = R),
        (r.modules = { external: [] }),
        o && !r.isInitialized && !t.isClone)
      ) {
        if (!r.options.initImmediate) {
          var i;
          return r.init(t, o), (i = r), x(r, i);
        }
        setTimeout(function() {
          r.init(t, o);
        }, 0);
      }
      return r;
    }
    return (
      b(n, e),
      (n.prototype.init = function() {
        function e(t) {
          return t ? ('function' == typeof t ? new t() : t) : null;
        }
        var n = this,
          o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          r = arguments[1];
        if (
          ('function' == typeof o && ((r = o), (o = {})),
          (this.options = m({}, g(), this.options, h(o))),
          (this.format = this.options.interpolation.format),
          r || (r = d),
          !this.options.isClone)
        ) {
          this.modules.logger
            ? R.init(e(this.modules.logger), this.options)
            : R.init(null, this.options);
          var i = new P(this.options);
          this.store = new N(this.options.resources, this.options);
          var s = this.services;
          (s.logger = R),
            (s.resourceStore = this.store),
            (s.languageUtils = i),
            (s.pluralResolver = new T(i, {
              prepend: this.options.pluralSeparator,
              compatibilityJSON: this.options.compatibilityJSON,
              simplifyPluralSuffix: this.options.simplifyPluralSuffix,
            })),
            (s.interpolator = new V(this.options)),
            (s.backendConnector = new U(e(this.modules.backend), s.resourceStore, s, this.options)),
            s.backendConnector.on('*', function(t) {
              for (var e = arguments.length, o = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                o[r - 1] = arguments[r];
              n.emit.apply(n, [t].concat(o));
            }),
            this.modules.languageDetector &&
              ((s.languageDetector = e(this.modules.languageDetector)),
              s.languageDetector.init(s, this.options.detection, this.options)),
            this.modules.i18nFormat &&
              ((s.i18nFormat = e(this.modules.i18nFormat)),
              s.i18nFormat.init && s.i18nFormat.init(this)),
            (this.translator = new E(this.services, this.options)),
            this.translator.on('*', function(t) {
              for (var e = arguments.length, o = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                o[r - 1] = arguments[r];
              n.emit.apply(n, [t].concat(o));
            }),
            this.modules.external.forEach(function(t) {
              t.init && t.init(n);
            });
        }
        [
          'getResource',
          'addResource',
          'addResources',
          'addResourceBundle',
          'removeResourceBundle',
          'hasResourceBundle',
          'getResourceBundle',
          'getDataByLanguage',
        ].forEach(function(t) {
          n[t] = function() {
            var e;
            return (e = n.store)[t].apply(e, arguments);
          };
        });
        var a = t(),
          u = function() {
            n.changeLanguage(n.options.lng, function(t, e) {
              (n.isInitialized = !0),
                n.logger.log('initialized', n.options),
                n.emit('initialized', n.options),
                a.resolve(e),
                r(t, e);
            });
          };
        return this.options.resources || !this.options.initImmediate ? u() : setTimeout(u, 0), a;
      }),
      (n.prototype.loadResources = function() {
        var t = this,
          e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : d;
        if (!this.options.resources || this.options.partialBundledLanguages) {
          if (this.language && 'cimode' === this.language.toLowerCase()) return e();
          var n = [],
            o = function(e) {
              if (e) {
                t.services.languageUtils.toResolveHierarchy(e).forEach(function(t) {
                  n.indexOf(t) < 0 && n.push(t);
                });
              }
            };
          if (this.language) o(this.language);
          else {
            this.services.languageUtils
              .getFallbackCodes(this.options.fallbackLng)
              .forEach(function(t) {
                return o(t);
              });
          }
          this.options.preload &&
            this.options.preload.forEach(function(t) {
              return o(t);
            }),
            this.services.backendConnector.load(n, this.options.ns, e);
        } else e(null);
      }),
      (n.prototype.reloadResources = function(e, n, o) {
        var r = t();
        return (
          e || (e = this.languages),
          n || (n = this.options.ns),
          o || (o = d),
          this.services.backendConnector.reload(e, n, function() {
            r.resolve(), o(null);
          }),
          r
        );
      }),
      (n.prototype.use = function(t) {
        return (
          'backend' === t.type && (this.modules.backend = t),
          ('logger' === t.type || (t.log && t.warn && t.error)) && (this.modules.logger = t),
          'languageDetector' === t.type && (this.modules.languageDetector = t),
          'i18nFormat' === t.type && (this.modules.i18nFormat = t),
          'postProcessor' === t.type && C.addPostProcessor(t),
          '3rdParty' === t.type && this.modules.external.push(t),
          this
        );
      }),
      (n.prototype.changeLanguage = function(e, n) {
        var o = this,
          r = t(),
          i = function(t, e) {
            o.translator.changeLanguage(e),
              e && (o.emit('languageChanged', e), o.logger.log('languageChanged', e)),
              r.resolve(function() {
                return o.t.apply(o, arguments);
              }),
              n &&
                n(t, function() {
                  return o.t.apply(o, arguments);
                });
          },
          s = function(t) {
            t &&
              ((o.language = t),
              (o.languages = o.services.languageUtils.toResolveHierarchy(t)),
              o.translator.language || o.translator.changeLanguage(t),
              o.services.languageDetector && o.services.languageDetector.cacheUserLanguage(t)),
              o.loadResources(function(e) {
                i(e, t);
              });
          };
        return (
          e || !this.services.languageDetector || this.services.languageDetector.async
            ? !e && this.services.languageDetector && this.services.languageDetector.async
              ? this.services.languageDetector.detect(s)
              : s(e)
            : s(this.services.languageDetector.detect()),
          r
        );
      }),
      (n.prototype.getFixedT = function(t, e) {
        var n = this,
          o = function t(e, o) {
            for (var r = arguments.length, i = Array(r > 2 ? r - 2 : 0), s = 2; s < r; s++)
              i[s - 2] = arguments[s];
            var a = m({}, o);
            return (
              'object' !== (void 0 === o ? 'undefined' : v(o)) &&
                (a = n.options.overloadTranslationOptionHandler([e, o].concat(i))),
              (a.lng = a.lng || t.lng),
              (a.lngs = a.lngs || t.lngs),
              (a.ns = a.ns || t.ns),
              n.t(e, a)
            );
          };
        return 'string' == typeof t ? (o.lng = t) : (o.lngs = t), (o.ns = e), o;
      }),
      (n.prototype.t = function() {
        var t;
        return this.translator && (t = this.translator).translate.apply(t, arguments);
      }),
      (n.prototype.exists = function() {
        var t;
        return this.translator && (t = this.translator).exists.apply(t, arguments);
      }),
      (n.prototype.setDefaultNamespace = function(t) {
        this.options.defaultNS = t;
      }),
      (n.prototype.loadNamespaces = function(e, n) {
        var o = this,
          r = t();
        return this.options.ns
          ? ('string' == typeof e && (e = [e]),
            e.forEach(function(t) {
              o.options.ns.indexOf(t) < 0 && o.options.ns.push(t);
            }),
            this.loadResources(function(t) {
              r.resolve(), n && n(t);
            }),
            r)
          : (n && n(), Promise.resolve());
      }),
      (n.prototype.loadLanguages = function(e, n) {
        var o = t();
        'string' == typeof e && (e = [e]);
        var r = this.options.preload || [],
          i = e.filter(function(t) {
            return r.indexOf(t) < 0;
          });
        return i.length
          ? ((this.options.preload = r.concat(i)),
            this.loadResources(function(t) {
              o.resolve(), n && n(t);
            }),
            o)
          : (n && n(), Promise.resolve());
      }),
      (n.prototype.dir = function(t) {
        return (
          t ||
            (t = this.languages && this.languages.length > 0 ? this.languages[0] : this.language),
          t
            ? [
                'ar',
                'shu',
                'sqr',
                'ssh',
                'xaa',
                'yhd',
                'yud',
                'aao',
                'abh',
                'abv',
                'acm',
                'acq',
                'acw',
                'acx',
                'acy',
                'adf',
                'ads',
                'aeb',
                'aec',
                'afb',
                'ajp',
                'apc',
                'apd',
                'arb',
                'arq',
                'ars',
                'ary',
                'arz',
                'auz',
                'avl',
                'ayh',
                'ayl',
                'ayn',
                'ayp',
                'bbz',
                'pga',
                'he',
                'iw',
                'ps',
                'pbt',
                'pbu',
                'pst',
                'prp',
                'prd',
                'ur',
                'ydd',
                'yds',
                'yih',
                'ji',
                'yi',
                'hbo',
                'men',
                'xmn',
                'fa',
                'jpr',
                'peo',
                'pes',
                'prs',
                'dv',
                'sam',
              ].indexOf(this.services.languageUtils.getLanguagePartFromCode(t)) >= 0
              ? 'rtl'
              : 'ltr'
            : 'rtl'
        );
      }),
      (n.prototype.createInstance = function() {
        return new n(
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          arguments[1],
        );
      }),
      (n.prototype.cloneInstance = function() {
        var t = this,
          e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d,
          r = m({}, this.options, e, { isClone: !0 }),
          i = new n(r);
        return (
          ['store', 'services', 'language'].forEach(function(e) {
            i[e] = t[e];
          }),
          (i.translator = new E(i.services, i.options)),
          i.translator.on('*', function(t) {
            for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), o = 1; o < e; o++)
              n[o - 1] = arguments[o];
            i.emit.apply(i, [t].concat(n));
          }),
          i.init(r, o),
          (i.translator.options = i.options),
          i
        );
      }),
      n
    );
  })(L))();
});
